<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seong.portfolio.quiz_quest.comments.repo.CommentsRepository">

    <insert id="save" parameterType="com.seong.portfolio.quiz_quest.comments.dto.CommentsDTO" useGeneratedKeys="true" keyProperty="commentId">
      <if test="parentCommentId == null">
      INSERT INTO comments(board_id, comment_content, author, board_type)
      VALUES (#{boardId}, #{commentContent}, #{author}, #{boardType});
      </if>
      <if test="parentCommentId != null">
          INSERT INTO comments(board_id, parent_comment_id, comment_content, author, board_type)
          VALUES (#{boardId}, #{parentCommentId}, #{commentContent}, #{author}, #{boardType});
      </if>
    </insert>

    <select id="findAllByCommentIdAndBoardIdAndBoardType" parameterType="Map" resultMap="pcMap" >
        SELECT
            pc.comment_id,
            pc.comment_content,
            pc.created_at,
            pc.author,
            u.level
        FROM comments pc
        INNER JOIN users u ON pc.author = u.user_id
        WHERE comment_id > #{largestCommentId}  AND board_id = #{commentsVO.boardId} AND board_type = #{commentsVO.boardType} AND parent_comment_id IS NULL
        ;
    </select>

    <select id="findOneByCommentIdAndBoardType" parameterType="com.seong.portfolio.quiz_quest.comments.dto.CommentsRepoDTO" resultMap="pcMap">
        SELECT
            c.comment_id,
            c.comment_content,
            c.created_at,
            c.author,
            u.level
        FROM comments c
        INNER JOIN users u ON c.author = u.user_id
        WHERE comment_id = #{commentId} AND board_type = #{boardType}
    </select>

    <select id="findAllByBoardIdAndBoardTypeSortTypeAndCursor" parameterType="com.seong.portfolio.quiz_quest.comments.dto.CommentsRepoDTO" resultMap="pcMap">

        SELECT
        pc.comment_id,
        pc.comment_content,
        pc.created_at,
        pc.author,
        u.level,
        (SELECT COUNT(*) FROM comments WHERE parent_comment_id = pc.comment_id AND board_type = #{boardType}) AS reply_count,
        <!--커서 기반 페이지네이션을 이용할 경우 createdAt과 commentId를 문자열로  -->
        CONCAT(
                LPAD(POW(10, 10) - UNIX_TIMESTAMP(pc.created_at), 10, '0'),
                LPAD(POW(10, 10) - pc.comment_id, 10, '0')
                ) AS `cursor`

        FROM comments pc
        INNER JOIN users u ON pc.author = u.user_id

        WHERE
            pc.comment_id IN (
            SELECT comment_id
            FROM comments
            WHERE parent_comment_id IS NULL
            )
        AND pc.board_id = #{boardId}
        AND pc.board_type = #{boardType}
        <if test="cursor != 0">
            AND  CONCAT(LPAD(POW(10, 10) - UNIX_TIMESTAMP(pc.created_at), 10, '0'), LPAD(POW(10, 10) - pc.comment_id, 10, '0'))
            <if test="sortType == 'DESC'">
                <![CDATA[>]]>
            </if>
            <if test="sortType == 'ASC'">
                <![CDATA[<]]>
            </if>
            #{cursor}
        </if>
        ORDER BY
        <if test="sortType == 'DESC'">
            pc.created_at DESC, pc.comment_id DESC
        </if>
        <if test="sortType == 'ASC'">
            pc.created_at ASC, pc.comment_id ASC
        </if>
        LIMIT 10;
    </select>

    <select id="findAllByParentCommentId" parameterType="Map" resultMap="pcMap">
        SELECT
        pc.comment_id,
        pc.comment_content,
        pc.created_at,
        pc.author,
        u.level,

        <!--커서 기반 페이지네이션을 이용할 경우 createdAt과 commentId를 문자열로  -->
        CONCAT(
        LPAD(POW(10, 10) - UNIX_TIMESTAMP(pc.created_at), 10, '0'),
        LPAD(POW(10, 10) - pc.comment_id, 10, '0')
        ) AS `cursor`

        FROM comments pc
        INNER JOIN users u ON pc.author = u.user_id
        WHERE
        pc.parent_comment_id = #{parentCommentId}
        <if test="cursor != 0">
            AND  CONCAT(LPAD(POW(10, 10) - UNIX_TIMESTAMP(pc.created_at), 10, '0'), LPAD(POW(10, 10) - pc.comment_id, 10, '0'))
            <if test="sortType == 'DESC'">
                <![CDATA[>]]>
            </if>
            <if test="sortType == 'ASC'">
                <![CDATA[<]]>
            </if>
            #{cursor}
        </if>
        ORDER BY
        <if test="sortType == 'DESC'">
            pc.created_at DESC, pc.comment_id DESC
        </if>
        <if test="sortType == 'ASC'">
            pc.created_at ASC, pc.comment_id ASC
        </if>
        LIMIT 10;
    </select>



    <resultMap id="pcMap" type="com.seong.portfolio.quiz_quest.comments.dto.CommentsDTO">
        <id property="commentId" column="comment_id"/> <!-- 댓글 ID -->
        <result property="commentContent" column="comment_content"/> <!-- 댓글 내용 -->
        <result property="createdAt" column="created_at"/> <!-- 생성 시간 -->
        <result property="problemId" column="problem_id"/> <!-- 문제 ID -->
        <result property="author" column="author"/>
        <result property="level" column="level"/>
        <result property="cursor" column="cursor"/>
        <result property="replyCount" column="reply_count"/>
        <!--<collection property="replyCommentList" resultMap="rcMap"/>--> <!-- 부모 댓글 ID -->
    </resultMap>


</mapper>